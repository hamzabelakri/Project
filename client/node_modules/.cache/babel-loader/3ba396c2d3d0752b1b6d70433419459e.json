{"ast":null,"code":"import axios from \"axios\";\nimport { SIGN_IN, USER_FAIL, LOG_OUT, REGISTER, GET_USER } from \"../Types\";\nexport const login = (useInfo, nav) => async dispatch => {\n  try {\n    const response = await axios.post(\"http://localhost:2000/auth/sign-in\", useInfo);\n    dispatch({\n      type: SIGN_IN,\n      payload: {\n        user: response.data.user,\n        token: response.data.token\n      }\n    });\n    nav('/profile');\n  } catch (error) {\n    dispatch({\n      type: USER_FAIL\n    });\n    error.response.data.errors.map(err => alert(err.msg));\n  }\n};\nexport const register = (useInfo, nav) => async dispatch => {\n  console.log(useInfo);\n\n  try {\n    const response = await axios.post(\"http://localhost:2000/auth/sign-up\", useInfo);\n    dispatch({\n      type: REGISTER,\n      payload: {\n        user: response.data.user,\n        token: response.data.token\n      }\n    });\n    nav('/profile');\n  } catch (error) {\n    dispatch({\n      type: USER_FAIL\n    });\n    error.response.data.errors.map(err => alert(err.msg));\n  }\n};\nexport const logOut = nav => {\n  nav('/');\n  return {\n    type: LOG_OUT\n  };\n};\nexport const getUser = () => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        token: localStorage.getItem('token')\n      }\n    };\n    const response = await axios.get('http://localhost:2000/auth/me', config);\n    dispatch({\n      type: GET_USER,\n      payload: response.data.user\n    });\n  } catch (error) {}\n};","map":{"version":3,"sources":["C:/Users/Bel Akri/Desktop/auth-workshop/client/src/Redux/Actions/authAction.js"],"names":["axios","SIGN_IN","USER_FAIL","LOG_OUT","REGISTER","GET_USER","login","useInfo","nav","dispatch","response","post","type","payload","user","data","token","error","errors","map","err","alert","msg","register","console","log","logOut","getUser","config","headers","localStorage","getItem","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA4BC,OAA5B,EAAoCC,QAApC,EAA6CC,QAA7C,QAA4D,UAA5D;AACA,OAAO,MAAMC,KAAK,GAAC,CAACC,OAAD,EAASC,GAAT,KAAe,MAAMC,QAAN,IAAiB;AAC/C,MAAI;AACA,UAAMC,QAAQ,GAAC,MAAMV,KAAK,CAACW,IAAN,CAAW,oCAAX,EAAgDJ,OAAhD,CAArB;AACAE,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACX,OAAN;AAAcY,MAAAA,OAAO,EAAC;AAACC,QAAAA,IAAI,EAACJ,QAAQ,CAACK,IAAT,CAAcD,IAApB;AAAyBE,QAAAA,KAAK,EAACN,QAAQ,CAACK,IAAT,CAAcC;AAA7C;AAAtB,KAAD,CAAR;AACAR,IAAAA,GAAG,CAAC,UAAD,CAAH;AACH,GAJD,CAIE,OAAOS,KAAP,EAAc;AACZR,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACV;AAAN,KAAD,CAAR;AACAe,IAAAA,KAAK,CAACP,QAAN,CAAeK,IAAf,CAAoBG,MAApB,CAA2BC,GAA3B,CAAgCC,GAAD,IAASC,KAAK,CAACD,GAAG,CAACE,GAAL,CAA7C;AAEH;AACJ,CAVM;AAWP,OAAO,MAAMC,QAAQ,GAAC,CAAChB,OAAD,EAASC,GAAT,KAAe,MAAMC,QAAN,IAAiB;AAClDe,EAAAA,OAAO,CAACC,GAAR,CAAYlB,OAAZ;;AACA,MAAI;AACA,UAAMG,QAAQ,GAAC,MAAMV,KAAK,CAACW,IAAN,CAAW,oCAAX,EAAgDJ,OAAhD,CAArB;AACAE,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACR,QAAN;AAAeS,MAAAA,OAAO,EAAC;AAACC,QAAAA,IAAI,EAACJ,QAAQ,CAACK,IAAT,CAAcD,IAApB;AAAyBE,QAAAA,KAAK,EAACN,QAAQ,CAACK,IAAT,CAAcC;AAA7C;AAAvB,KAAD,CAAR;AACAR,IAAAA,GAAG,CAAC,UAAD,CAAH;AAEH,GALD,CAKE,OAAOS,KAAP,EAAc;AACZR,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACV;AAAN,KAAD,CAAR;AACAe,IAAAA,KAAK,CAACP,QAAN,CAAeK,IAAf,CAAoBG,MAApB,CAA2BC,GAA3B,CAAgCC,GAAD,IAASC,KAAK,CAACD,GAAG,CAACE,GAAL,CAA7C;AACH;AACJ,CAXM;AAYP,OAAO,MAAMI,MAAM,GAAElB,GAAD,IAAO;AACzBA,EAAAA,GAAG,CAAC,GAAD,CAAH;AACA,SAAO;AAACI,IAAAA,IAAI,EAACT;AAAN,GAAP;AAED,CAJM;AAKP,OAAO,MAAMwB,OAAO,GAAC,MAAI,MAAMlB,QAAN,IAAiB;AAEtC,MAAI;AACA,UAAMmB,MAAM,GAAC;AAACC,MAAAA,OAAO,EAAC;AAClBb,QAAAA,KAAK,EAACc,YAAY,CAACC,OAAb,CAAqB,OAArB;AADY;AAAT,KAAb;AAIA,UAAMrB,QAAQ,GAAC,MAAMV,KAAK,CAACgC,GAAN,CAAU,+BAAV,EAA0CJ,MAA1C,CAArB;AACAnB,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACP,QAAN;AAAeQ,MAAAA,OAAO,EAACH,QAAQ,CAACK,IAAT,CAAcD;AAArC,KAAD,CAAR;AACH,GAPD,CAOE,OAAOG,KAAP,EAAc,CAEf;AACJ,CAZM","sourcesContent":["import axios from \"axios\";\r\nimport { SIGN_IN ,USER_FAIL,LOG_OUT,REGISTER,GET_USER} from \"../Types\";\r\nexport const login=(useInfo,nav)=>async(dispatch)=>{\r\n    try {\r\n        const response=await axios.post(\"http://localhost:2000/auth/sign-in\",useInfo)\r\n        dispatch({type:SIGN_IN,payload:{user:response.data.user,token:response.data.token}})\r\n        nav('/profile')\r\n    } catch (error) {\r\n        dispatch({type:USER_FAIL})\r\n        error.response.data.errors.map((err) => alert(err.msg));\r\n        \r\n    }\r\n}\r\nexport const register=(useInfo,nav)=>async(dispatch)=>{\r\n    console.log(useInfo)\r\n    try {\r\n        const response=await axios.post(\"http://localhost:2000/auth/sign-up\",useInfo)\r\n        dispatch({type:REGISTER,payload:{user:response.data.user,token:response.data.token}})\r\n        nav('/profile')\r\n        \r\n    } catch (error) {\r\n        dispatch({type:USER_FAIL})\r\n        error.response.data.errors.map((err) => alert(err.msg));\r\n    }\r\n}\r\nexport const logOut=(nav)=>{\r\n  nav('/');\r\n  return {type:LOG_OUT}\r\n\r\n}\r\nexport const getUser=()=>async(dispatch)=>{\r\n    \r\n    try {\r\n        const config={headers:{\r\n            token:localStorage.getItem('token')\r\n        }}\r\n        \r\n        const response=await axios.get('http://localhost:2000/auth/me',config)\r\n        dispatch({type:GET_USER,payload:response.data.user})\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}